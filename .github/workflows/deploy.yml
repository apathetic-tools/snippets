# .github/workflows/deploy.yml
# Deploy both site and repo docs to GitHub Pages via SSH.
# References:
#   https://apathetic-recipes.github.io/github-pages/
#   https://github.com/peaceiris/actions-gh-pages
name: Deploy to GitHub Pages

# job constants
env:
  DEPLOY_REPO: apathetic-recipes/apathetic-recipes.github.io
  DEPLOY_BRANCH: gh-pages
  ENABLE_JEKYLL: true
  DEPLOY_README_BRANCH: main
  ENABLE_JEKYLL_README: true

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branch’s name
  push:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  # pages: write # unnecessary with SSH deploy
  # id-token: write # unnecessary with SSH deploy

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.job }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build recipes with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_dist

      - name: Build repo docs with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./_pages-repo/
          destination: ./_dist-site-repo
      
      - name: Upload artifact gh-pages        
        if: github.ref == 'refs/heads/main' # only deploy main        
        id: upload-gh-pages
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./_dist
    
      - name: Upload artifact site-repo README        
        if: github.ref == 'refs/heads/main' && env.DEPLOY_README_BRANCH != '' # only deploy main        
        id: upload-site-repo-readme
        uses: actions/upload-artifact@v4
        with:
          name: site-repo-readme
          path: ./_dist-site-repo

    outputs:
      artifact_gh_pages: ${{ steps.upload-gh-pages.outputs.artifact-id }}
      artifact_site_repo_readme: ${{ steps.upload-site-repo-readme.outputs.artifact-id }}

  deploy_gh_pages:
    if: needs.build.outputs.artifact_gh_pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages

    steps:
      - name: Verify ACTIONS_DEPLOY_KEY
        run: |
          if [ -z "${{ secrets.ACTIONS_DEPLOY_KEY }}" ]; then
            echo "❌ ACTIONS_DEPLOY_KEY is not set!"
            exit 1
          fi
          if ! echo "${{ secrets.ACTIONS_DEPLOY_KEY }}" | grep -q "BEGIN OPENSSH PRIVATE KEY"; then
            echo "❌ ACTIONS_DEPLOY_KEY does not look like a valid OpenSSH private key!"
            exit 1
          fi

      - name: Download build output        
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./_dist        

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: ${{ env.DEPLOY_REPO }}
          publish_branch: ${{ env.DEPLOY_BRANCH }}
          publish_dir: ./_dist
          enable_jekyll: ${{ env.ENABLE_JEKYLL }}

  deploy_site_repo_readme:
    if: needs.build.outputs.artifact_site_repo_readme
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages

    steps:      
      - name: Verify ACTIONS_DEPLOY_KEY
        run: |
          if [ -z "${{ secrets.ACTIONS_DEPLOY_KEY }}" ]; then
            echo "❌ ACTIONS_DEPLOY_KEY is not set!"
            exit 1
          fi
          if ! echo "${{ secrets.ACTIONS_DEPLOY_KEY }}" | grep -q "BEGIN OPENSSH PRIVATE KEY"; then
            echo "❌ ACTIONS_DEPLOY_KEY does not look like a valid OpenSSH private key!"
            exit 1
          fi

      - name: Download build output        
        uses: actions/download-artifact@v4
        with:
          name: site-repo-readme
          path: ./_dist-site-repo         

      - name: Deploy to GitHub README Branch    
        uses: peaceiris/actions-gh-pages@v4
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: ${{ env.DEPLOY_REPO }}
          publish_branch: ${{ env.DEPLOY_README_BRANCH }}
          publish_dir: ./_dist-site-repo
          enable_jekyll: ${{ env.ENABLE_JEKYLL_README }}

  summary:
    needs: [deploy_gh_pages, deploy_site_repo_readme]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Deployment Summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.deploy_gh_pages.result }}" = "success" ]; then
            echo "- ✅ GitHub Pages deployed" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.deploy_gh_pages.result }}" = "skipped" ]; then
            echo "- ⏭️ GitHub Pages deployment skipped" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ GitHub Pages deployment failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.deploy_site_repo_readme.result }}" = "success" ]; then
            echo "- ✅ site-repo README deployed" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.deploy_site_repo_readme.result }}" = "skipped" ]; then
            echo "- ⏭️ site-repo README deployment skipped" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ site-repo README deployment failed" >> $GITHUB_STEP_SUMMARY
          fi
